import propTypes from '@styled-system/prop-types'
import { pick } from '@styled-system/props'
import PropTypes from 'prop-types'
import React from 'react'

import { StyledButton } from './Button.styles'

export const Button = ({
  children,
  className,
  onClick,
  size,
  variant,
  ...restOfProps
}) => {
  return (
    <StyledButton
      className={className}
      onClick={onClick}
      size={size}
      variant={variant}
      whileTap={{ scale: 0.98 }}
      {...pick(restOfProps)}
    >
      {children}
    </StyledButton>
  )
}

Button.propTypes = {
  /**
   * Component children
   */
  children: PropTypes.oneOfType([
    PropTypes.arrayOf(PropTypes.node),
    PropTypes.node
  ]),

  /**
   * Adds in additional class names in addition to what is generated by styled components.
   */
  className: PropTypes.string,

  /**
   * onClick event
   */
  onClick: PropTypes.func,

  /**
   * Different types of button sizes
   */
  size: PropTypes.oneOf(['large', 'regular']),

  /**
   * Different types of button styles
   */
  variant: PropTypes.oneOf(['primary', 'secondary']),

  /**
   * Styled system props
   */
  ...propTypes.color,
  ...propTypes.grid,
  ...propTypes.layout,
  ...propTypes.space
}

Button.defaultProps = {
  size: 'regular',
  variant: 'primary'
}
